image: node:12.17.0

stages:
  - development

cache:
  paths:
    - node_modules/

before_script:
  - /bin/bash -c "$(curl -fsSL https://git.heyooo.com/snippets/2/raw)" $NPM_HOST $USERNAME $PASSWORD
  - npm config set always-auth true
  - pnpm install

development:
  stage: development
  only:
    - master
  cache:
    paths:
      - node_modules/
  script: |
    CURRENT_DIR=$(pwd)

    echo "=> Building"
    rm -rf .git/
    rm -rf .next/*
    pnpm install
    cp .env.development .env.production
    npm run build

    echo "=> Packing"
    mkdir tmp/
    rm -rf .next/cache/
    cp -r .next tmp/
    cp -r public tmp/
    cp .npmrc tmp/
    cp .env.production tmp/
    cp next.config.js tmp/
    cp next-i18next.config.js tmp/
    cp prepare.js tmp/
    cp package.json tmp/
    cp pnpm-lock.yaml tmp/

    if [ -f eb.tar.gz ]; then
      rm eb.tar.gz
    fi
    cd tmp/
    tar -czvf eb.tar.gz * .??*

    cd $CURRENT_DIR
    echo "=> Deploying"
    scp -P "$DEVELOP_PORT" -o stricthostkeychecking=no -C tmp/eb.tar.gz "$DEVELOP_DEPLOY_USER"@"$DEVELOP_DEPLOY_HOST":"$DEVELOP_TEMP"
    DEPLOY_SHELL="rm -rf ${DEVELOP_APP_DIR}/.next/ && tar -xzf ${DEVELOP_TEMP}/eb.tar.gz -C ${DEVELOP_APP_DIR} && rm -rf ${DEVELOP_TEMP}/eb.tar.gz && cd ${DEVELOP_APP_DIR} && NODE_ENV=production pnpm install && npm start"
    ssh -p "$DEVELOP_PORT" -t "$DEVELOP_DEPLOY_USER"@"$DEVELOP_DEPLOY_HOST" "$DEPLOY_SHELL"
    exit
